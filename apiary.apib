FORMAT: 1A
HOST: http://oppty.apiblueprint.org/

# Oppty

Oppty is a simple API allowing consumers to view sales opportunities.

# Opportunity API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

It is recommend to follow the “url” link values,
[Link](https://tools.ietf.org/html/rfc5988) or Location headers where
applicable to retrieve resources. Instead of constructing your own URLs,
to keep your client decoupled from implementation details.

## Retrieve the Entry Point [GET]

+ Response 200 (application/json)

        {
            "opptys_url": "/opptys"
        }

## Group Opportunity

Resources related to opportunities in the API.

## Opportunities [/opptys/{?page,pageSize}]

A list of Opportunity objects with the following attributes:

+ Id - The entity id of the Opportunity
+ published_at - An ISO8601 date when the question was published.
+ url

+ Parameters
    + page: 1 (required, number)... Page number
    + pageSize: 25 (required, number)... Number of items per page


### View an Opportunity List [GET]

+ Response 200 (application/json)
    
    + Header
    
            cache-control: max-age=600
    
    + Body
    
            {
                "page" : {
                    "number" : 1
                    ,"size" : 25
                    ,"totalPages" : 100
                },
                "opptys" : [
                    {
                        "id" : "99999"
                        ,"Name": "Oppty Name 99999"
                        ,"published_at": "2014-11-11T08:40:51.620Z"
                        ,"url": "/opptys/99999"
                    }
                    ,{
                        "id" : "99998"
                        ,"Name": "Oppty Name 99998"
                        ,"published_at": "2013-11-11T08:40:51.620Z"
                        ,"url": "/opptys/99998"
                    }
                ]

## Opportunity [/opptys/{id}]

A Opportunity object has the following attributes:

+ Id - The entity id of the Opportunity
+ published_at - An ISO8601 date when the question was published.
+ url

+ Parameters
    + id: 99999 (required, number)... Opportunity Id

### View an Opportunity [GET]

+ Response 200 (application/json)
    
    + Header
    
            cache-control: max-age=600
    
    + Body
    
            "oppty" :
            {
                "id" : "99999"
                ,"Name": "Oppty Name 99999"
                ,"published_at": "2014-11-11T08:40:51.620Z"
                ,"url": "/questions/99999",
                "choices": [
                    {
                        "choice": "Swift",
                        "url": "/questions/1/choices/1",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "url": "/questions/1/choices/2",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "url": "/questions/1/choices/3",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "url": "/questions/1/choices/4",
                        "votes": 256
                    }
                ]
            }


## Choice [/questions/{question_id}/choices/{choice_id}]

+ Parameters
    + question_id: 1 (required, number) - ID of the Question in form of an integer
    + choice_id: 1 (required, number) - ID of the Choice in form of an integer

### Vote on a Choice [POST]

This action allows you to vote on a question's choice.

+ Response 201

    + Headers

            Location: /questions/1

## Questions Collection [/questions{?page}]

+ Parameters
    + page: 1 (optional, number) - The page of questions to return

### List All Questions [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ question (string) - The question
+ choices (array[string]) - A collection of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2014-11-11T08:40:51.620Z",
                "url": "/questions/2",
                "choices": [
                    {
                        "choice": "Swift",
                        "url": "/questions/2/choices/1",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "url": "/questions/2/choices/2",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "url": "/questions/2/choices/3",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "url": "/questions/2/choices/4",
                        "votes": 0
                    }
                ]
            }
